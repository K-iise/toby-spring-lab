<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
    <bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource" >
        <property name="driverClass" value="com.mysql.cj.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost/testdb"/>
        <property name="username" value="root"/>
        <property name="password" value="1234"/>
    </bean>

    <!-- 타깃 -->
    <bean id="userService" class="hello.springbook.user.service.UserServiceImpl">
        <property name="userDao" ref="userDao"/>
        <property name="mailSender" ref="mailSender"/>
    </bean>

    <!-- 팩토리 빈 설정-->
    <bean id="message" class="hello.springbook.learningtest.factorybean.MessageFactoryBean">
        <property name="text" value="Factory Bean"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- aop 네임 스페이스를 적용한 AOP 설정 빈-->
    <!-- 기존의 설정한 pointcut, advisor 빈들을 aop 태그를 이용하여 정의함.-->
    <!-- 관련 빈들을 의미가 잘 드러나는 독립된 전용 태그를 사용하여 이해하기 쉽고 코드의 양이 줄음-->
    <aop:config>
        <aop:advisor advice-ref="transactionAdvice" pointcut="bean(*Service)"/>
    </aop:config>

    <tx:annotation-driven/>

    <!-- tx 네임 스페이스를 적용한 tx 설정 빈-->
    <tx:advice id="transactionAdvice">
        <tx:attributes>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

    <!-- 자동 프록시 생성기 -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>

    <!-- 테스트용 UserService의 등록 -->
    <bean id="testUserService" class="hello.springbook.service.UserServiceTest$TestUserService"
          parent="userService"/>

    <bean id="mailSender" class="hello.springbook.user.service.DummyMailSender">
    </bean>

    <bean id="userDao" class="hello.springbook.user.dao.UserDaoJdbc">
        <property name="dataSource" ref="dataSource"/>
        <property name="sqlService" ref="sqlService"/>
    </bean>

    <bean id="sqlService" class="hello.springbook.user.sqlservice.SimpleSqlService">
        <property name="sqlMap">
            <map>
                <entry key="add" value="insert into users(id, name, password, level, login, recommend, email) values (?,?,?,?,?,?,?)"/>
                <entry key="get" value="select * from users where id = ?"/>
                <entry key="getAll" value="select * from users order by id"/>
                <entry key="deleteAll" value="delete from users"/>
                <entry key="getCount" value="select count(*) from users"/>
                <entry key="update" value="update users set name = ?, password = ?, level = ?, login = ?, recommend = ?, email = ? where id = ?"/>
            </map>
        </property>
    </bean>

</beans>